<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserLoginLogMapper">
	
	<!--表名 -->
	<sql id="tableName">
		TL_USER_LOGIN_LOG
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		USER_ID,	
		USER_NAME,	
		LOG_TYPE,	
		LOG_IP,	
		IN_DATE,	
		OUT_DATE,	
		ABS_TIMES,	
		REMARK,	
		UPDATE_ID,	
		UPDATE_TIME,	
		USER_LOGIN_LOG_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USER_ID},	
		#{USER_NAME},	
		#{LOG_TYPE},	
		#{LOG_IP},	
		#{IN_DATE},	
		#{OUT_DATE},	
		#{ABS_TIMES},	
		#{REMARK},	
		#{UPDATE_ID},	
		#{UPDATE_TIME},	
		#{USER_LOGIN_LOG_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			USER_LOGIN_LOG_ID = #{USER_LOGIN_LOG_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		OUT_DATE = #{OUTDATE},LOG_TYPE=#{TYPE}
		where 
		USER_LOGIN_LOG_ID = #{ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			USER_LOGIN_LOG_ID = #{ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		a.USER_ID, a.USER_NAME, a.LOG_TYPE, a.LOG_IP, a.IN_DATE,a.OUT_DATE, a.ABS_TIMES,a.REMARK, a.UPDATE_ID, a.UPDATE_TIME, a.USER_LOGIN_LOG_ID
		from 
		<include refid="tableName"></include> a,SYS_USER b
		where 1=1 and a.USER_ID = b.USER_ID
		<if test="pd.USER_ID!= null and pd.USER_ID !=''"><!-- 登录判断是否是第一次登录 -->
			and a.USER_ID=#{pd.USER_ID}
		</if>
		<if test="pd.DATE!= null and pd.DATE !=''"><!-- 登录判断是否是第一次登录 -->
			and a.UPDATE_TIME=#{pd.DATE}
		</if>
		<if test="pd.GROUP_ID!= null and pd.GROUP_ID !=''"><!-- 名字检索 -->
			and b.GROUP_ID=#{pd.GROUP_ID}
		</if>
		<if test="pd.USER_NAME!= null and pd.USER_NAME !=''"><!-- 名字检索 -->
			and a.USER_NAME=#{pd.USER_NAME}
		</if>
		<if test="pd.START_DATE != null and pd.START_DATE != ''"><!-- 关键词检索 -->
			and a.UPDATE_TIME &gt;= #{pd.START_DATE}
		</if>
		<if test="pd.END_DATE!= null and pd.END_DATE != ''"><!-- 关键词检索 -->
			and a.UPDATE_TIME &lt;= #{pd.END_DATE}
		</if>
		<if test="pd.LOG_TYPE!= null and pd.LOG_TYPE != ''"><!-- 关键词检索 -->
			and a.LOG_TYPE like CONCAT(CONCAT('%', #{pd.LOG_TYPE}),'%')
		</if>
		order by a.USER_LOGIN_LOG_ID desc
	</select>
	
	
	<!-- 列表三级 -->
	<select id="datalistPage3" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where USER_ID=#{joinId}
		<if test="pd.USER_ID!= null and pd.USER_ID != ''"><!-- 关键词检索 -->
			and
				(
					USER_ID=#{pd.USER_ID}
					 and 
					<!-- 字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')  -->
					 UPDATE_TIME=#{pd.DATE}
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		a.USER_ID, a.USER_NAME, a.LOG_TYPE, a.LOG_IP, a.IN_DATE,a.OUT_DATE, a.ABS_TIMES,a.REMARK, a.UPDATE_ID, a.UPDATE_TIME, a.USER_LOGIN_LOG_ID
		from 
		<include refid="tableName"></include> a,SYS_USER b
		where 1=1 and a.USER_ID = b.USER_ID
		<if test="USER_ID!= null and USER_ID !=''"><!-- 登录判断是否是第一次登录 -->
			and a.USER_ID=#{USER_ID}
		</if>
		<if test="DATE!= null and DATE !=''"><!-- 登录判断是否是第一次登录 -->
			and a.UPDATE_TIME=#{DATE}
		</if>
		<if test="GROUP_ID!= null and GROUP_ID !=''"><!-- 名字检索 -->
			and b.GROUP_ID=#{GROUP_ID}
		</if>
		<if test="USER_NAME!= null and USER_NAME !=''"><!-- 名字检索 -->
			and a.USER_NAME=#{USER_NAME}
		</if>
		<if test="START_DATE != null and START_DATE != ''"><!-- 关键词检索 -->
			and a.UPDATE_TIME &gt;= #{START_DATE}
		</if>
		<if test="END_DATE!= null and END_DATE != ''"><!-- 关键词检索 -->
			and a.UPDATE_TIME &lt;= #{END_DATE}
		</if>
		<if test="LOG_TYPE!= null and LOG_TYPE != ''"><!-- 关键词检索 -->
			and a.LOG_TYPE like CONCAT(CONCAT('%', #{LOG_TYPE}),'%')
		</if>
		order by a.USER_LOGIN_LOG_ID desc
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			USER_LOGIN_LOG_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
		<!-- 统计 -->
	<select id="countlog" parameterType="page" resultType="pd">
		SELECT IFNULL(b.LOG_TYPE,'未签到') LOG_TYPE,count(1) LOG_NUM from SYS_USER a left JOIN TL_USER_LOGIN_LOG b on a.USER_ID = b.USER_ID and b.IN_DATE >= CURDATE() where a.GROUP_ID in ('200','201','202','300','301','302','303','304','400','401','402','403','500','600')
GROUP BY b.LOG_TYPE
	</select>
	
</mapper>