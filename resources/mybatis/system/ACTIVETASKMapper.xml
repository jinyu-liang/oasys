<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ACTIVETASKMapper">
	
	<!--表名 -->
	<sql id="tableName">
		TB_ACTIVETASK
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		TASK_NAME,
		TASK_CODE,	
		TASK_TYPE,	
		START_DATE,	
		END_DATE,	
		WORK_LOAD,	
		STAFF_ID,	
		IT_NAME,	
		WEEK_NUM,	
		UPDATE_TIME,	
		REMARK,	
		ACTIVETASK_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{TASK_NAME},
		#{TASK_CODE},	
		#{TASK_TYPE},	
		#{START_DATE},	
		#{END_DATE},	
		#{WORK_LOAD},	
		#{STAFF_ID},	
		#{IT_NAME},	
		#{WEEK_NUM},	
		#{UPDATE_TIME},	
		#{REMARK},	
		#{ACTIVETASK_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			ACTIVETASK_ID = #{ACTIVETASK_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			TASK_NAME = #{TASK_NAME},
			TASK_CODE = #{TASK_CODE},
			TASK_TYPE = #{TASK_TYPE},
			START_DATE = #{START_DATE},
			END_DATE = #{END_DATE},
			WORK_LOAD = #{WORK_LOAD},
			STAFF_ID = #{STAFF_ID},
			IT_NAME = #{IT_NAME},
			WEEK_NUM = #{WEEK_NUM},
			UPDATE_TIME = #{UPDATE_TIME},
			REMARK = #{REMARK},
		ACTIVETASK_ID = ACTIVETASK_ID
		where 
		ACTIVETASK_ID = #{ACTIVETASK_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			ACTIVETASK_ID = #{ACTIVETASK_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		SELECT A.*,B.NAME
        FROM TB_ACTIVETASK A JOIN SYS_USER B ON A.STAFF_ID = B.USER_ID
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and 
			( A.TASK_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or B.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or A.TASK_CODE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%'))
		</if>
		<if test="pd.startdata!= null and pd.startdata != ''"><!-- 开始时间检索 -->
			and left(A.START_DATE,10) &gt;= #{pd.startdata}
		</if>
		<if test="pd.enddata!= null and pd.enddata != ''"><!-- 结束时间检索 -->
			and left(A.START_DATE,10) &lt;= #{pd.enddata}
		</if>
		<if test="pd.type!= null and pd.type != ''"><!-- 类型检索 -->
			and A.TASK_TYPE = #{pd.type}
		</if>
		<if test="pd.week!= null and pd.week != ''"><!-- 周数检索 -->
			and A.WEEK_NUM = #{pd.week}
		</if>
		order by UPDATE_TIME desc
	</select>
	
	<!-- 列表 -->
	<select id="list3" parameterType="page" resultType="pd">
		SELECT A.*,B.NAME
        FROM TB_ACTIVETASK A JOIN SYS_USER B ON A.STAFF_ID = B.USER_ID
		where A.STAFF_ID=#{joinId}
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and 
			( A.TASK_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or B.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or A.TASK_CODE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%'))
		</if>
		<if test="pd.startdata!= null and pd.startdata != ''"><!-- 开始时间检索 -->
			and left(A.START_DATE,10) &gt;= #{pd.startdata}
		</if>
		<if test="pd.enddata!= null and pd.enddata != ''"><!-- 结束时间检索 -->
			and left(A.START_DATE,10) &lt;= #{pd.enddata}
		</if>
		<if test="pd.type!= null and pd.type != ''"><!-- 类型检索 -->
			and A.TASK_TYPE = #{pd.type}
		</if>
		<if test="pd.week!= null and pd.week != ''"><!-- 周数检索 -->
			and A.WEEK_NUM = #{pd.week}
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			ACTIVETASK_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
</mapper>